mixin modalCloseButton()
  button.modal-close(onclick='this.parentNode.style.display = "none"')
    i.fas.fa-times

doctype html
html(lang='en')
  head
    title Untitled | Willow
    include /global/head.pug
    link(href='/css/index.css' rel='stylesheet' type='text/css')
  body
    include /global/header.pug
    #content
      +toolbar()
        .dropdown
          button File
          .dropdown-menu(style={display: 'none'})
            a.menu-option(href=`${env.BASE_URL}` target='_blank') New
            hr
            button.menu-option(@click='openFile') Open
            .hidden
              input#open-file(type='file' @change='loadFile($event)')
            hr
            button.menu-option(@click='saveFile') Save
            button.menu-option(@click='saveFileAs') Save as...
            if _user !== undefined
              hr
              button.menu-option(onclick='toolbar.showModal("submissions-modal")') Submit tree
            hr
            button.menu-option(onclick='window.close()') Quit
        .dropdown
          button Edit
          .dropdown-menu(style={display: 'none'})
            button.menu-option(@click='undo') Undo
            button.menu-option(@click='redo') Redo
            hr
            button.menu-option(@click='toggleComment') Toggle comment
            button.menu-option(@click='togglePremise') Toggle premise
            hr
            button.menu-option(@click='addStatementBefore') Add statement before
            button.menu-option(@click='addStatementAfter') Add statement after
            button.menu-option(@click='createBranch') Create branch
            hr
            button.menu-option(@click='deleteStatement') Delete statement
            button.menu-option(@click='deleteBranch') Delete branch
        .dropdown
          button Navigate
          .dropdown-menu(style={display: 'none'})
            button.menu-option(@click='moveUp') Move up
            button.menu-option(@click='moveDown') Move down
            button.menu-option(@click='moveUpBranch') Move up branch
            button.menu-option(@click='moveDownBranch') Move down branch
            button.menu-option(@click='moveUpTree') Move up tree
            button.menu-option(@click='moveDownTree') Move down tree
            hr
            button.menu-option(@click='toggleBranchExpansion') Toggle branch expansion
            button.menu-option(@click='collapseAllBranches') Collapse all branches
            button.menu-option(@click='expandAllBranches') Expand all branches
            button.menu-option(@click='collapseTerminatedBranches') Collapse terminated branches
        .dropdown
          button Evaluate
          .dropdown-menu(style={display: 'none'})
            button.menu-option(onclick='toolbar.showModal("options-modal")') Options
            hr
            button.menu-option(@click='checkStatement') Check statement
            button.menu-option(@click='checkTree') Check tree
        .dropdown
          button Settings
          .dropdown-menu(style={display: 'none'})
            button.menu-option(onclick='toolbar.showModal("shortcuts-modal")') Shortcuts
            button.menu-option(onclick='toolbar.showModal("substitutions-modal")') Substitutions
        .dropdown
          button Help
          .dropdown-menu(style={display: 'none'})
            a.menu-option(href='https://github.com/Bram-Hub/Willow/blob/master/userguide.md' target='_blank') User guide
            hr
            button.menu-option(onclick='toolbar.showModal("about-modal")') About
            hr
            a.menu-option(href='https://github.com/Bram-Hub/Willow/issues' target='_blank') Report a bug
            button.menu-option(@click='toggleDeveloperMode') Toggle developer mode
      .container.center
        h2 {{ name }}
        .truth-tree.left
          p(v-if='$store.state.developerMode') checkRepresentation: {{ $store.state.tree.checkRepresentation() }}, leaves: {{ [...$store.state.tree.leaves] }}, treeOptions: {{ JSON.stringify($store.state.tree.options) }}
          truth-tree-branch(:head='$store.state.tree.root' ref='rootBranch')
      #status-bar(v-if='selectedNode !== null')
        i(:class="getNodeIconClasses(selectedNode)")
        |  {{ selectedNode.getFeedback() }}
      #options-modal.modal.card(style={display: 'none'})
        +modalCloseButton()
        h2.center Options
        table.dual-table
          thead
            tr
              th Option
              th Value
          tbody
            tr
              td Require contradictions to use atomic statements.
              td
                input#requireAtomicContradiction(type='checkbox' v-model='tree.options.requireAtomicContradiction' :disabled='tree.options.lockedOptions')
            tr
              td Require all branches be terminated.
              td
                input#requireAllBranchesTerminated(type='checkbox' v-model='tree.options.requireAllBranchesTerminated' :disabled='tree.options.lockedOptions')
            tr
              td Lock the current options and premises.
              td
                input#lockedOptions(type='checkbox' v-model='tree.options.lockedOptions')
      #shortcuts-modal.modal.card(style={display: 'none'})
        +modalCloseButton()
        h2.center Shortcuts
        table.dual-table
          thead
            tr
              th Action
              th Shortcut
          tbody
            tr
              td Open file
              td
                key-recorder(@on-pressed='openFile' event='open-file' :default='["Control", "o"]')
            tr
              td Save file
              td
                key-recorder(@on-pressed='saveFile' event='save-file' :default='["Control", "s"]')
            tr
              td Save file as...
              td
                key-recorder(@on-pressed='saveFileAs' event='save-file-as' :default='["Control", "Shift", "S"]')
            tr
              td Undo
              td
                key-recorder(@on-pressed='undo' event='undo' :default='["Control", "z"]')
            tr
              td Redo
              td
                key-recorder(@on-pressed='redo' event='redo' :default='["Control", "y"]')
            tr
              td Toggle comment
              td
                key-recorder(@on-pressed='toggleComment' event='toggle-comment' :default='["Control", "/"]')
            tr
              td Toggle premise
              td
                key-recorder(@on-pressed='togglePremise' event='toggle-premise' :default='["Control", "p"]')
            tr
              td Add statement before
              td
                key-recorder(@on-pressed='addStatementBefore' event='add-statement-before' :default='["Control", "b"]')
            tr
              td Add statement after
              td
                key-recorder(@on-pressed='addStatementAfter' event='add-statement-after' :default='["Control", "a"]')
            tr
              td Create branch
              td
                key-recorder(@on-pressed='createBranch' event='create-branch' :default='["Control", "Shift", "B"]')
            tr
              td Delete statement
              td
                key-recorder(@on-pressed='deleteStatement' event='delete-statement' :default='["Control", "d"]')
            tr
              td Delete branch
              td
                key-recorder(@on-pressed='deleteBranch' event='delete-branch' :default='["Control", "Shift", "D"]')
            tr
              td Move up
              td
                key-recorder(@on-pressed='moveUp' event='move-up' :default='["Up"]')
            tr
              td Move down
              td
                key-recorder(@on-pressed='moveDown' event='move-down' :default='["Down"]')
            tr
              td Move up branch
              td
                key-recorder(@on-pressed='moveUpBranch' event='move-up-branch' :default='["Control", "Up"]')
            tr
              td Move down branch
              td
                key-recorder(@on-pressed='moveDownBranch' event='move-down-branch' :default='["Control", "Down"]')
            tr
              td Move up tree
              td
                key-recorder(@on-pressed='moveUpTree' event='move-up-tree' :default='["Home"]')
            tr
              td Move down tree
              td
                key-recorder(@on-pressed='moveDownTree' event='move-down-tree' :default='["End"]')
            tr
              td Toggle branch expansion
              td
                key-recorder(@on-pressed='toggleBranchExpansion' event='toggle-branch-expansion')
            tr
              td Collapse all branches
              td
                key-recorder(@on-pressed='collapseAllBranches' event='collapse-all-branches' :default='["Control", "k", "0"]')
            tr
              td Expand all branches
              td
                key-recorder(@on-pressed='expandAllBranches' event='expand-all-branches' :default='["Control", "k", "j"]')
            tr
              td Collapse terminated branches
              td
                key-recorder(@on-pressed='collapseTerminatedBranches' event='collapse-terminated-branches')
      #substitutions-modal.modal.card(style={display: 'none'})
        +modalCloseButton()
        h2.center Substitutions
        table.dual-table
          thead
            tr
              th Symbol
              th Text
          tbody
            tr
              td ¬
              td
                substitution-recorder(symbol='¬' default='~')
            tr
              td ∨
              td
                substitution-recorder(symbol=' ∨ ' default='|')
            tr
              td ∧
              td
                substitution-recorder(symbol=' ∧ ' default='&')
            tr
              td →
              td
                substitution-recorder(symbol=' → ' default='$')
            tr
              td ↔
              td
                substitution-recorder(symbol=' ↔ ' default='%')
            tr
              td ∀
              td
                substitution-recorder(symbol='∀' default='@')
            tr
              td ∃
              td
                substitution-recorder(symbol='∃' default='/')
            tr
              td ◯
              td
                substitution-recorder(symbol='◯' default=';')
            tr
              td ×
              td
                substitution-recorder(symbol='×' default="'")
      #about-modal.modal.card(style={display: 'none'})
        +modalCloseButton()
        .row
          img.logo-img(src=`${env.BASE_URL}/img/logo.png` width='100')
          div
            h2 About Willow
            p Commit #{commit}
      if _user !== undefined
        #submissions-modal.modal.card(style={display: 'none'})
          +modalCloseButton()
          .container.center
            h2 Submit Assignment
            form.large-form#submission-form(method='POST' ref='submissionForm' action='/submit')
              input(name='tree' type='hidden' :value='$store.state.tree.serialize()')
              input(name='course_name' type='hidden' value='' ref='submissionCourseName')
              input(name='assignment_name' type='hidden' value='' ref='submissionAssignmentName')
              .field.field-required
                label(for='field-assignment') Assignment
                select#field-assignment(ref='assignmentSelect' @change='updateSubmissionPOST')
                  for assignment in assignments
                    option(label=`[${assignment.course_name}] ${assignment.name}` value=assignment)
              input.btn.btn-primary(type='submit' value='Submit Assignment')
    script(src=`${env.BASE_URL}/js/index.js` type='text/javascript')
    include /global/footer.pug
